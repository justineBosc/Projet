// ===========================================================================
//                                  Includes
// ===========================================================================
#include "Individu.h"


// ===========================================================================
//                       Definition of static attributes
// ===========================================================================

// ===========================================================================
//                                Constructors
// ===========================================================================

  Individu::Individu(void){
	  x_=0;
    y_=0;
	  G_=0;
	  Ca_=0;
	  Cb_=0;
	  Cc_=0;
	  w_=0;
	  vivant_=1;
    Pdeath_=0;
    Pmut_=0;
    Wmin_=0;
  }

  Individu::Individu(float Pdeath, float Pmut, float Wmin){
    x_=0;
    y_=0;
    G_=0;
    Ca_=0;
    Cb_=0;
    Cc_=0;
    w_=0;
    vivant_=1;
    Pdeath_=Pdeath;
    Pmut_=Pmut;
    Wmin_=Wmin;
  }

// ===========================================================================
//                                 Destructor
// ===========================================================================

  Individu::~Individu(void){
  }

// ===========================================================================
//                               Public Methods
// ===========================================================================

  void Individu::mutation(void){
	  float r = rand()/(double)RAND_MAX;
	  if (r < get_Pmut()){
		  if (get_G()==0) { 
			  set_G(1); 
		  }
		  else if (get_G()==1) {
			  set_G(0); 
		  }
	  }
  }
  
  void Individu::death(void){
    float r = rand()/(double)RAND_MAX;
    if (r < get_Pdeath()){
      set_vivant(0);
    }
  }

// ===========================================================================
//                              Protected Methods
// ===========================================================================

